#!/usr/bin/env bash

_font_red="$(tput setaf 1)"
_font_green="$(tput setaf 2)"
_font_yellow="$(tput setaf 3)"
_font_blue="$(tput setaf 4)"
_font_orange="$(tput setaf 6)"
_font_bold="$(tput bold)"
_font_reset="$(tput sgr0)"

echo_debug(){ echo "$_font_blue[+] $@$_font_reset" >&2; }
echo_info(){ echo "$_font_green[*] $@$_font_reset" >&2; }
echo_warning(){ echo "$_font_yellow[!] $@$_font_reset" >&2; }
echo_error(){ echo "$_font_red[#] $@$_font_reset" >&2; }

download_file(){
  local description="$1"
  local url="$2"
  local filename="$(basename "$url")"

  echo_info "Downloading $description from $url ..."

  if [[ -f "$filename" ]]
  then
    echo_warning "File $filename already exists! Skipping file."
  else
    curl -LO "$url"
    echo_info "Download finished."
  fi

  du -h "$filename"
}

download_archlinux(){
  local baseurl="https://mirror.puzzle.ch/archlinux/iso/latest/"
  local filename="$(curl -s "$baseurl" | grep -E -o '<a href="archlinux-[^-]+-x86_64.iso">' | cut -d\" -f2)"
  download_file "Arch Linux" "$baseurl/$filename"
}

download_kalilinux(){
  local baseurl="https://cdimage.kali.org/current/"
  local filename="$(curl -s "$baseurl" | grep -E -o '<a href="kali-linux-[^-]+-live-amd64.iso">' | cut -d\" -f2)"
  download_file "Kali Linux" "$baseurl/$filename"
}

download_ubuntulivelinux(){
  local baseurl="http://cdimage.ubuntu.com/daily-live/current/"
  local filename="$(curl -s "$baseurl" | grep -E -o '<a href="[^\"]+desktop-amd64.iso">.*desktop-amd64.iso' | cut -d\" -f2)"
  download_file "Ubuntu Linux" "$baseurl/$filename"
}

download_ubuntulinux(){
  local baseurl="http://ubuntu.com/"
  local downloadpage="https://ubuntu.com/download/desktop"
  local latestversion="$(curl -s "$downloadpage" | grep -Eo "/download/desktop/[^\"]+")"
  local imageurl="$(curl "$baseurl/$latestversion")"
  download_file "Ubuntu Linux" "$baseurl/$latestversion"
}

download_grml(){
  local url="$(curl -s https://grml.org/download/ | grep -E -o '<a href=".*grml96-full_[0-9.]+\.iso">' | cut -d\" -f2)"
  download_file "GRML" "$url"
}

download_systemrescuecd(){
  local url="$(curl -s "http://www.system-rescue-cd.org/Download/" | grep -E -o '<a href=".*systemrescuecd.*.iso">' | cut -d\" -f2)"
  download_file  "System Rescue CD" "$url"
}

download_debiangnomelive(){
  local baseurl="https://cdimage.debian.org/debian-cd/current-live/amd64/iso-hybrid/"
  local filename="$(curl -s "$baseurl" | grep -E -o '<a href="debian-live-[0-9\.]+-amd64-gnome.iso">' | cut -d\" -f2 | head -n 1)"
  download_file "Debian Live Gnome" "$baseurl/$filename"
}

download_debianxfcelive(){
  local baseurl="https://cdimage.debian.org/images/unofficial/non-free/images-including-firmware/current-live/amd64/iso-hybrid/"
  local filename="$(curl -s "$baseurl" | grep -E -o '<a href="debian-live-[0-9\.]+-amd64-xfce\+nonfree.iso">' | cut -d\" -f2 | head -n 1)"
  download_file "Debian Live XFCE Non-Free" "$baseurl/$filename"
}

download_debiannonfreemulti(){
  local baseurl="https://cdimage.debian.org/images/unofficial/non-free/images-including-firmware/current/multi-arch/iso-cd/"
  local filename="$(curl -s "$baseurl" | grep -E -o '<a href="firmware-[0-9\.]+-amd64-i386-netinst.iso">' | cut -d\" -f2 | head -n 1)"
  download_file "Debian Multi Non-Free" "$baseurl/$filename"
}

main(){
  download_archlinux
  download_kalilinux
  download_ubuntulivelinux
  download_ubuntulinux
  download_grml
  download_systemrescuecd
  download_debiangnomelive
  download_debianxfcelive
  download_debiannonfreemulti
}
